IP层：
尽最大努力交付。

IP数据报检验和仅检验IP数据报首部，UDP检验和把数据部分和首部一起检验。
IP标志位最低位MF=1,表示后面还有分片；MF=0,表示后面没有分片。中间位DF=0，表示允许分片，否则不允许分片。
OSPF不使用UDP,TCP,直接IP数据报发送；RIP是应用层协议，在传输层使用UDP。
IP首部；
UDP首部；
文件传输协议
(1)FTP 客户/服务器端 使用 TCP连接
动态主机配置协议（DHCP)
邮件传输过程
传输层
复用分用；
UDP:
（1） 特点
无连接；
尽最大努力交付；
面向报文：UDP对应用层交下来的报文既不合并，也不拆分，保留报文的边界；添加首部后交给IP层。
没有拥塞控制，因此网络出现的拥塞不会使源主机发送速率降低。适合实时应用。
支持一对一，一对多，多对一，多对多方式通信。
首部开销小，只有八个字节，比TCP20个字节少；
没有拥塞控制，可能造成严重网络拥塞；

（2）
首部格式
8个字节，4个字段，每个字段2个字节；
源端口 ： 源端口号，在需要对方回信时选用，不需要时可以全0
目的端口 ：  目的端口号，在交付报文时必须使用；
首部长度 ：  UDP数据报的长度，最小值是8，仅有首部；
检验和 ：    检测UDP数据报在传输时是否有问题，有就丢弃；（伪首部检验，既不向上提交，也不向下传送，仅仅用于检验）


TCP:
(1) 特点
面向连接的传输层协议： 在使用TCP协议前，必须先建立连接 ， 传送结束后， 必须释放连接；
每一条TCP连接只能有两个端口，每一条TCP连接只能是点对点的。
提供可靠交付的服务。
全双工通信（发送缓存，接收缓存）。
面向字节流

理想传输条件：
(1)传输信道不产生差错
(2)不管发送方以多快的速率发送文件，接收方总是来得及处理收到的数据；
在这样的理想传输条件下，不采取任何措施就能实现可靠传输。然而实际网络不具备以上条件。我们可以使用一些可靠传输协议，当出现差错时让对方重传出现差错
的数据，同时在接收方来不及处理收到的数据时，及时告诉发送方适当降低发送数据的速度。这样一来，本来不可靠的信道就能实现可靠传输。

确认和重传机制，可以在不可靠的传输网络上实现可靠传输。
(1)在发送完一个分组后，必须暂时保留已发送的文件的副本；
(2)分组和确认分组都必须进行编号；
(3)超时计时器设置的重传时间必须比数据在分组传输的平均往返时间更长一点；

停等协议信道利用率低

连续ARQ协议：
累计确认（信道质量不好是回退带来不好的影响）

TCP首部格式
(1)源端口和目的端口  ：各占2个字节 TCP的分用也是通过端口实现。
(2)序号 ： 占四字节；
(3)确认号 : 四字节，期望收到对方下一个报文段的第一个数据字节的序号；
(4)数据偏移：四字节 ，单位四字节。指出TCP报文段的数据起始处距离TCP报文段的起始处有多远；实际指出TCP报文段首部长度，由于首部长度中还有长度
不确定的选项字节，因此数据偏移段是必要的。（最大值60字节）
(5)保留字段： 占六位，保留为今后使用，目前置为0。
(6)紧急URG :  URG=1, 表明紧急字段指针有效。告诉系统此报文段有紧急数据，应优先传送，URG置1时，发送方应用进程就告诉发送方的TCP有紧急数据需要传
送。于是发送方TCP就把紧急数据插入到本报文段数据的最前面。紧急数据后面的数据仍是普通数据。（这时要与首部中紧急指针字段配合使用）
(7)确认ACK : 仅当ACK=1时，确认号字段才有效。TCP规定，连接建立后所有传送的报文段都必须把ACK置为1。
(8)推送PSH :  两个应用进程进行交互通信时，有时在一端的通信方希望在键入一个命令后能立刻得到对方的响应，在这种情况下，推送方就可以使用推送操作。
发送方把PSH置1，接收方接收到就尽快交付，不用等缓存满在交付。
(9)复位RST(Reset)   RST=1,表明TCP连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。
(10)同步SYN : 在连接建立时用来同步序号。SYN=1表示这是一个连接请求或连接接受报文。
(11)终止FIN : FIN为1时 ， 表示这一报文段的发送方的数据已发送完毕，要求释放运输连接。
(12)窗口 ： 占2字节 ，指的是发送本报文段的一方的接受窗口。窗口值告诉对方，从本报文段首部中的确认号算起，接收方目前允许对方发送的数据量。之所以有限制，
是因为接收方的数据缓存空间有限。
(13)检验和 ：伪首部第四字段17表示UDP, 6表示TCP; 检验和字段检验的字段包括首部，数据字段。
(14)紧急指针 ： 2字节，只有在URG=1时才有意义，它指出本报文段中的紧急数据的字节数（紧急数据结束后就是普通数据），因此，紧急指针指出了紧急数据的末尾
在报文段中的位置。(当所有紧急数据处理完，TCP就告诉应用程序恢复正常）
(15)选项 ： 长度可变，最长40字节，没有使用选项，TCP首部长度20字节。
选项开始只有MSS,是每一个TCP报文段数据部分最大长度。
扩大窗口选项 最大可扩大14字节
时间戳选项 :时间戳值字段和时间戳回送回答字段
（a) 计算RTT;
（b) 处理TCP序号超过2^32重复情况。
(16) 填充字段 使首部字段是16倍数。

TCP可靠传输实现
(1)以字节为单位滑动窗口
(2)超时重传时间选择
(3)选择确认SACK
TCP流量控制
流量控制：让发送方发送速率不要太快，接收方要来得及接收。
（接收到0窗口之后启动持续计时器，持续计时器时间到，发送零窗口探测报文段）持续计时器解决死锁


TCP传输效率
(1)维持一个变量， 等于MSS;
(2)发送方应用进程指明要求发送报文段(使用push)
(3)发送方计时器时限到
Nagle算法(发送方)(收到接收方确认再发送,不急着发送）
糊涂窗口综合症(接收方)(接收方等待一段时间，或缓存有一半空闲空间，不急着在缓存空间很小时把信息告诉发送方)

TCP拥塞控制
拥塞控制是一个全局性的过程
流量控制往往是点对点通信量的控制，是端到端的问题。流量控制要做的是抑制发送端发送数据的速率，以便使接收端来得及接受。
拥塞控制可以增大某些可用资源，或减少一些用户对资源的需求。
拥塞控制：
(1) 开环控制：开环控制就是在设计时将有关发生拥塞的因素考虑周到，力求网络在工作时不产生拥塞。但一旦整个系统运行起来，就不再中途进行改正。静态方法
(2) 闭环控制基于反馈回路。动态。事先不考虑发生拥塞的因素，采用网络系统检测到拥塞发生在何时，在什么地方发生，把拥塞发生的信息传给合适的地方，调整网络系统
的运行，解决问题。

判断网络出现拥塞依据：超时。
慢开始 拥塞避免
快重传(3个) : 个别报文段在网络中丢失，网络并未发生拥塞，发送方迟迟收不到确认，就会产生超时，误认为发生拥塞，使发送方错误启动慢开始，把拥塞窗口设为1，
降低了传输速率。  
快恢复
![b](https://images2017.cnblogs.com/blog/1099419/201801/1099419-20180130152329250-2090977971.png);

AQM主动队列管理


TCP三次握手
只有第三次可以携带数据
SYN=1不可以传送数据

TCP四次挥手
客户端 时间等待计时器 2MSL
发送端  保活计时器(客户端出现故障)

put 幂等性
post 没有幂等性

HTTP状态码
1XX 接收的请求正在处理

2XX 成功状态码 请求正常处理完毕
200 OK 表示从客户端发来的请求在服务端被正常处理了
204 No Content  表示发送的请求已成功处理，但在返回的响应报文中不含实体的主体部分，另外，也不允许返回任何实体的主体。
206 Partiel Content 该状态码表示客户端进行了状态请求，而服务器成功执行了这部分的GET请求，响应报文中包含由content-range指定范围的实体内容。

3XX 重定向状态码 需要完成附加操作完成请求
300 客户端请求了实际指向多个资源的URI.
301 Moved Permanently 永久性重定向 状态码表示请求的资源已经被分配了新的URI，以后应使用资源现在所指的URI。也就是说，如果已经把资源的URI保存为书签了，这时应该按Location
首部提示的字段重新保存。
302 Found 临时重定向 改状态码表示请求的资源已被分配了新的URI，希望（用户）本次能使用新的URI进行访问。
(详细来说，301和302共同点在都表示重定向，浏览器在拿到这个服务器返回的状态码后会自动跳转到一个新的URI地址，这个地址从响应的Location首部取得，
不同点：301表示旧资源的地址已经被永久移除了，已经不可访问了，在抓取新内容的同时也将旧的网址更改为重定向后的网址），302表示旧地址还可以访问，重定向只是临时从旧地址转到新地址
，搜索引擎会抓取内容保存旧地址)状态码抓取新的内容，同时修改URI,302状态码抓取新的内容但是保存URI)
303 See Other 表示请求的资源存在另一个URI，应使用Get方法获取请求的资源。
(302 303 区别 ，303明确要求客户端使用GET方法获取资源。301，302是明确禁止将POST方法改为GET方法的，但实际使用时大家都会这么做）
304 Not Modified  虽然在3开头中，但和重定向没有关系。 表示客户端发送附带条件的请求（IF-MATCH,IF-Modified since , IF-None-Match , IF-Range,If-Unmodified-Since)，服务器允许访问资源，但未满足条件的情况。
307 Temporary Redirect 临时重定向，和302 Found有相同含义, 尽管302标准禁止将POST方法改为GET,但实际执行大家并不遵守，307会严格遵守。不会从POST变为GET。
4XX 客户端错误状态吗  服务器无法处理请求
400 Bad Request 表示请求报文中存在语法错误 ， 错误发生时，需修改请求的内容后再次发送请求。 浏览器会像对待200 OK 一样对待这个状态码
401 Unauthorized  表示发送的请求需要有通过http验证。另外如果之前已进行过一次请求，表示验证失败。返回401的响应必须包含一个适用于被请求资源的（WWW-Authenticate)首部
用以质询用户信息，浏览器初次接收到401响应，弹出用于验证窗口。
403 Forbidden 该状态码表示对请求资源的访问被服务器拒绝了。 未获得文件系统访问授权，访问权限出现某些问题，都可能是403原因。
404 Not found 找不到请求资源 服务器上无法找到或服务器拒绝访问但不想说明原因。
412 Precondition failed 请求条件不成立


5XX 服务器错误状态码  服务器处理请求出错
500 Internal Server Error
表明服务器端在执行请求时出现错误
503 Service unavailable
表明服务器暂时处于超负载或停机维护，如果事先得知解除以上状态需要时间，最好写入RetryAfter 首部字段再返回客户端。

CSMA/CD
载波监听多点接入/碰撞检测
发生碰撞(截断二进制指数退避算法)

CSMA/CA5

PING 工作在应用层 

traceroute 工作在网络层


HTTP 报文
报文首部 空行 报文实体
报文首部
请求报文首部 请求行  请求首部 通用首部 实体首部
响应报文首部 状态行 响应首部 通用首部 实体首部
请求行 方法 URI http版本
状态行 版本 状态码 原因

方法
GET 获取资源
POST 上传资源
PUT 上传资源
OPTION 询问支持方法
DELETE 删除资源
HEDA 获得报文首部 不返回实体

PUT有幂等性 POST 没有幂等性

请求首部
ACCEPT 告知服务器能够处理媒体类型
HOST 请求资源所属主机名 端口号
ACCEPT CHARSET 支持字符集
ACCEPT ENCODING 用户可接受编码及优先级
Authorization  认证
IF- 条件请求 
IF-MODIFIED SINCE
IF-NONE MATCH
IF-Range
MAX-FORWARDS
USER AGENT 客户端信息

响应首部
ACCEPT RANGE     BYTS/NONE
AGE
Etag

通用首部
CACHE-control 控制缓存
CONNECTTION 管理持久连接 逐跳首部
DATE         报文创建日期
TRAILER 报文末端首部一览


实体首部
EXPIRES 资源失效日期
CONTENT- 信息 编码方式 语言 大小 摘要 位置 范围 类型 实体主体过期日期 最后修改

COOKIE相关属性
name = value 赋予cookie名称和其值（必须项
expires 有效期 若不指明则默认为浏览器关闭
path = PATH 
domain 域名
secure 仅在https安全通信发送cookie
httponly 使cookie不能被javascript 访问


HTTPS 
HTTP+加密 + 认证 + 完整性保护

加密
混合加密
保护公钥安全性，使用数字签名+公钥证书
MAC报文摘要保护完整性


认证
BASIC认证 用户id:密码 BASE64编码后明码发送
DIGEST认证 客户端发送认证要求，服务端发送质询码，客户端将认证信息与质询码计算得到响应码，发送给服务端
SSL客户端认证


cookie只能存储ASCALL码字符串，session可以存储任何类型数据 ， 因此数据复杂时首选session
cookie存储在浏览器中，容易被恶意查看，ke'yi












































